#!/bin/bash

# Set pathing to work from any user
if [ ~ = "/root" ]; then
  PATH_PREFIX=~/../home/fairbanks/fairbanks
else
 # accessed via sudo perms or fairbanks user
 PATH_PREFIX=~/fairbanks
fi

# establish directories we will be using based on user account
CONDA=$PATH_PREFIX/miniconda3/etc/profile.d/conda.sh

SCAN_DIR=$PATH_PREFIX/external/lidar
cd $SCAN_DIR

# Activate the PDAL environment
source $CONDA
conda activate pdal

# <<<< BEGIN Main tower file processing <<<<
INPUT_FILE=$PATH_PREFIX/scripts/pdal/base-laz.json
# Clone/convert all .rxp files into .laz using PDAL and its input config json file
find $SCAN_DIR -name "*MAIN.frame.rxp" | parallel pdal pipeline $INPUT_FILE --readers.rxp.filename={} --writers.las.filename={.}.laz
# Compress all original .rxp files
find $SCAN_DIR -name "*MAIN.frame.rxp" | parallel gzip {}
# >>>>> END Main tower file processing >>>>>

# <<<< BEGIN GNSS tower 1 file processing <<<<
INPUT_FILE=$PATH_PREFIX/scripts/pdal/gnss-1-laz.json
# Clone/convert all .rxp files into .laz using PDAL and its input config json file
find $SCAN_DIR -name "*GNSS1.frame.rxp" | parallel pdal pipeline $INPUT_FILE --readers.rxp.filename={} --writers.las.filename={.}.laz
# Compress all original .rxp files
find $SCAN_DIR -name "*GNSS1.frame.rxp" | parallel gzip {}
# >>>>> END GNSS tower 1 file processing >>>>>

# <<<< BEGIN GNSS tower 2 file processing <<<<
INPUT_FILE=$PATH_PREFIX/scripts/pdal/gnss-2-laz.json
# Clone/convert all .rxp files into .laz using PDAL and its input config json file
find $SCAN_DIR -name "*GNSS2.frame.rxp" | parallel pdal pipeline $INPUT_FILE --readers.rxp.filename={} --writers.las.filename={.}.laz
# Compress all original .rxp files
find $SCAN_DIR -name "*GNSS2.frame.rxp" | parallel gzip {}
# >>>>> END GNSS tower 2 file processing >>>>>

# <<<< BEGIN GNSS tower 3 file processing <<<<
INPUT_FILE=$PATH_PREFIX/scripts/pdal/gnss-3-laz.json
# Clone/convert all .rxp files into .laz using PDAL and its input config json file
find $SCAN_DIR -name "*GNSS3.frame.rxp" | parallel pdal pipeline $INPUT_FILE --readers.rxp.filename={} --writers.las.filename={.}.laz
# Compress all original .rxp files
find $SCAN_DIR -name "*GNSS3.frame.rxp" | parallel gzip {}
# >>>>> END GNSS tower 3 file processing >>>>>

# <<<< BEGIN GNSS tower 4 file processing <<<<
INPUT_FILE=$PATH_PREFIX/scripts/pdal/gnss-4-laz.json
# Clone/convert all .rxp files into .laz using PDAL and its input config json file
find $SCAN_DIR -name "*GNSS4.frame.rxp" | parallel pdal pipeline $INPUT_FILE --readers.rxp.filename={} --writers.las.filename={.}.laz
# Compress all original .rxp files
find $SCAN_DIR -name "*GNSS4.frame.rxp" | parallel gzip {}
# >>>>> END GNSS tower 4 file processing >>>>>

# <<<< BEGIN PIVOX LAS ZIP <<<<
find $SCAN_DIR -name "*.las" | parallel gzip {}
find $SCAN_DIR -name "*.laz" | parallel gzip {}
# >>>> END PIVOX LAS ZIP >>>>

# Repeat process for internal storage 
conda deactivate
SCAN_DIR=$PATH_PREFIX/internal/lidar
cd $SCAN_DIR
conda activate pdal 

# <<<< BEGIN Main tower file processing <<<<
INPUT_FILE=$PATH_PREFIX/scripts/pdal/base-laz.json
# Clone/convert all .rxp files into .laz using PDAL and its input config json file
find $SCAN_DIR -name "*MAIN.frame.rxp" | parallel pdal pipeline $INPUT_FILE --readers.rxp.filename={} --writers.las.filename={.}.laz
# Compress all original .rxp files
find $SCAN_DIR -name "*MAIN.frame.rxp" | parallel gzip {}
# >>>>> END Main tower file processing >>>>>

# <<<< BEGIN GNSS tower 1 file processing <<<<
INPUT_FILE=$PATH_PREFIX/scripts/pdal/gnss-1-laz.json
# Clone/convert all .rxp files into .laz using PDAL and its input config json file
find $SCAN_DIR -name "*GNSS1.frame.rxp" | parallel pdal pipeline $INPUT_FILE --readers.rxp.filename={} --writers.las.filename={.}.laz
# Compress all original .rxp files
find $SCAN_DIR -name "*GNSS1.frame.rxp" | parallel gzip {}
# >>>>> END GNSS tower 1 file processing >>>>>

# <<<< BEGIN GNSS tower 2 file processing <<<<
INPUT_FILE=$PATH_PREFIX/scripts/pdal/gnss-2-laz.json
# Clone/convert all .rxp files into .laz using PDAL and its input config json file
find $SCAN_DIR -name "*GNSS2.frame.rxp" | parallel pdal pipeline $INPUT_FILE --readers.rxp.filename={} --writers.las.filename={.}.laz
# Compress all original .rxp files
find $SCAN_DIR -name "*GNSS2.frame.rxp" | parallel gzip {}
# >>>>> END GNSS tower 2 file processing >>>>>

# <<<< BEGIN GNSS tower 3 file processing <<<<
INPUT_FILE=$PATH_PREFIX/scripts/pdal/gnss-3-laz.json
# Clone/convert all .rxp files into .laz using PDAL and its input config json file
find $SCAN_DIR -name "*GNSS3.frame.rxp" | parallel pdal pipeline $INPUT_FILE --readers.rxp.filename={} --writers.las.filename={.}.laz
# Compress all original .rxp files
find $SCAN_DIR -name "*GNSS3.frame.rxp" | parallel gzip {}
# >>>>> END GNSS tower 3 file processing >>>>>

# <<<< BEGIN GNSS tower 4 file processing <<<<
INPUT_FILE=$PATH_PREFIX/scripts/pdal/gnss-4-laz.json
# Clone/convert all .rxp files into .laz using PDAL and its input config json file
find $SCAN_DIR -name "*GNSS4.frame.rxp" | parallel pdal pipeline $INPUT_FILE --readers.rxp.filename={} --writers.las.filename={.}.laz
# Compress all original .rxp files
find $SCAN_DIR -name "*GNSS4.frame.rxp" | parallel gzip {}
# >>>>> END GNSS tower 4 file processing >>>>>

# <<<< BEGIN PIVOX LAS ZIP <<<<
find $SCAN_DIR -name "*.las" | parallel gzip {}
find $SCAN_DIR -name "*.laz" | parallel gzip {}
# >>>> END PIVOX LAS ZIP >>>>
